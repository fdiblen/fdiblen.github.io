{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>https://fdiblen.github.io/rsecon24/</p>"},{"location":"about/","title":"About","text":"<p>WIP</p>"},{"location":"awesome/","title":"FD's Awesome list","text":""},{"location":"awesome/#visualization","title":"Visualization","text":"<p>https://github.com/apache/incubator-superset https://github.com/metabase/metabase https://github.com/grafana/grafana https://github.com/ddol/caravel https://github.com/elastic/kibana</p> <p>https://github.com/CartoDB/cartodb https://github.com/sverhoeven/docker-cartodb</p> <p>https://github.com/omnisci/mapd-charting</p> <p>https://github.com/vaexio/vaex</p> <p>https://github.com/densitydesign/raw</p> <p>https://github.com/voila-dashboards/voila</p> <p>https://datashader.org/</p>"},{"location":"awesome/#web-frameworks","title":"Web frameworks","text":""},{"location":"awesome/#general","title":"General","text":"<p>https://framework7.io/</p>"},{"location":"awesome/#vue","title":"Vue","text":"<p>https://quasar.dev https://gridsome.org</p>"},{"location":"awesome/#react","title":"React","text":"<p>https://www.gatsbyjs.org/</p>"},{"location":"git/","title":"git notes","text":""},{"location":"git/#show-the-commit-message-and-short-hash","title":"Show the commit message and short hash","text":"<pre><code>git log --pretty=oneline --abbrev-commit\n</code></pre> <p>alternatively:</p> <pre><code>git log  --pretty=format:'%h --&gt; %s'\n</code></pre>"},{"location":"git/#undo-last-commit","title":"Undo last commit","text":"<p>Source</p> <pre><code>$ git commit -m \"Something terribly misguided\" # (0: Your Accident)\n$ git reset HEAD~                              # (1)\n&lt;&lt; edit files as necessary &gt;&gt;                  # (2)\n$ git add .                                    # (3)\n$ git commit -c ORIG_HEAD                      # (4)\n</code></pre> <p>Alternative:</p> <pre><code>git revert --no-commit 0d1d7fc3..HEAD\ngit commit\ngit push\n</code></pre>"},{"location":"git/#merge-branches","title":"Merge branches","text":"<pre><code>git checkout master\ngit merge dev\ngit push origin master\n</code></pre>"},{"location":"git/#push-to-different-remote-branch","title":"Push to different remote branch","text":"<pre><code>git push origin master:newBranch\n</code></pre>"},{"location":"git/#fetch-a-filefolder-from-diffrent-branch","title":"Fetch a file/folder from diffrent branch","text":"<pre><code>git checkout &lt;branch_name&gt; -- &lt;paths&gt;\n</code></pre> <p>To get package.json from dev branch to current branch:</p> <pre><code>git checkout dev -- package.json\n</code></pre>"},{"location":"git/#commit-current-changes-to-different-existing-branch","title":"Commit current changes to different (existing )branch","text":"<pre><code>git stash\ngit checkout other-branch\ngit stash pop\n</code></pre> <p>The first stash hides away your changes (basically making a temporary commit), and the subsequent stash pop re-applies them.</p>"},{"location":"git/#commit-current-changes-to-new-branch","title":"Commit current changes to new branch","text":"<pre><code>git stash\ngit checkout -b new-branch\ngit stash pop\n</code></pre>"},{"location":"git/#remove-folder-from-entire-git-history","title":"Remove folder from entire git history","text":"<pre><code>git filter-branch -f --tree-filter \"rm -rf FOLDERNAME\" --prune-empty HEAD\ngit for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d\necho FOLDERNAME/ &gt;&gt; .gitignore\ngit add .gitignore\ngit commit -m \"Removing FOLDERNAME from git history\"\ngit gc\ngit push origin master --force\n</code></pre>"},{"location":"git/#sign-commits-by-default","title":"Sign commits by default","text":"<pre><code>git config --global user.signingkey &lt;YOUR_SIGNING_KEY&gt;\ngit config --global commit.gpgsign true\ngit config --global gpg.program gpg\n</code></pre>"},{"location":"linux/","title":"Linux notes","text":""},{"location":"linux/#aurorasilverblue","title":"Aurora/Silverblue","text":""},{"location":"linux/#aurorabluefin-package-list","title":"Aurora/Bluefin package list","text":"<p>https://github.com/ublue-os/bluefin/blob/main/packages.json</p>"},{"location":"linux/#disable-autosuspend-for-usb-devices","title":"Disable autosuspend for usb devices","text":"<pre><code>sudo rpm-ostree kargs --append=usbcore.autosuspend=-1\n</code></pre>"},{"location":"linux/#interactively-edit-kernel-arguments","title":"interactively edit kernel arguments","text":"<p><pre><code>sudo rpm-ostree kargs --editor\n</code></pre> Source</p>"},{"location":"rsecon24/","title":"RSECon24 Workshop: Effortlessly creating Python packages with good practices","text":"<p>Info</p> <p>Time: 14:30-15:45 Tuesday, 3 September, 2024</p> <p>Location: 2.16 (Classroom)</p> <p>Submission link</p> <p>Note</p> <p>These notes are for the presenter and may change.</p>"},{"location":"rsecon24/#4-mins-introduction-presentation","title":"4 mins - Introduction - Presentation","text":""},{"location":"rsecon24/#1-min-check-the-requirements","title":"1 min - Check the requirements","text":"<p>Instructions can be found at https://github.com/fdiblen/RSECon24</p> <p>Note</p> <p>Use <code>bash</code> shell with a simple prompt by running:</p> <pre><code>export PS1='$ '\n</code></pre> <p>Check the shell</p> <pre><code>$ echo $SHELL\n/usr/bin/bash\n</code></pre> <p>Check Python version</p> <pre><code>$ python --version\nPython 3.12.5\n</code></pre> <p>Check git version</p> <pre><code>$ git --version\ngit version 2.46.0\n</code></pre> <p>GitHub account</p> <pre><code>$ ssh git@github.com\nHi fdiblen! You've successfully authenticated, but GitHub does not provide shell access.\nConnection to github.com closed.\n</code></pre> <p>Useful Links:</p> <ul> <li>To create a new account: https://github.com/signup</li> <li>To connect to GitHub with SSH: https://docs.github.com/en/authentication/connecting-to-github-with-ssh</li> </ul>"},{"location":"rsecon24/#1435-10-mins-create-a-python-package-using-a-minimum-profile","title":"14:35 (10 mins) - Create a Python package using a minimum profile","text":"<p>Install copier</p> <pre><code>python3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install copier\n</code></pre> <p>Info</p> <p>We will create a package called <code>baklava</code></p> <p>Create a new package by running:</p> <pre><code>copier copy https://github.com/nlesc/python-template.git baklava\n</code></pre> <p>Answer the questions as shown below:</p> <pre><code>Thanks for generating a project using our template.\n\nYou'll be asked a series of questions whose answers will be used to\ngenerate a tailored project for you.\n\nFor each question there is a placeholder. Make sure you provide an\ninput to each of them.\n\n\ud83c\udfa4 Select a profile\n   Minimum (bare minimum, no extra features)\n\ud83c\udfa4 Enter the name of the Python package.\n   baklava\n\ud83c\udfa4 Enter the version of the Python package\n   0.1.0\n\ud83c\udfa4 Enter your full name\n   Faruk D\n\ud83c\udfa4 license\n   Apache License, Version 2.0\n\ud83c\udfa4 Short description of package\n   A sweet package\n\ud83c\udfa4 Add keywords to make your package findable on PyPI\n   sweet,dessert\n\ud83c\udfa4 Enter the name of your GitHub username or organization\n   fdiblen\n\ud83c\udfa4 What is your email address?\n   f.diblen@esciencecenter.nl\n\ud83c\udfa4 Who is the copyright holder (the default is your full name)?\n   Faruk D\n\nCopying from template version None\n    create  .\n    create  NOTICE\n    create  src\n    create  src/baklava\n    create  src/baklava/__init__.py\n    create  src/baklava/my_module.py\n    create  .copier-answers.yml\n    create  MANIFEST.in\n    create  README.md\n    create  LICENSE\n    create  .gitignore\n    create  project_setup.md\n    create  pyproject.toml\n\nYour project \"baklava\" has been successfully created in baklava folder!\n</code></pre> <p>Run the command below to see a list of generated files:</p> <pre><code>tree -a baklava\n</code></pre> <p>Output:</p> <pre><code>\u251c\u2500\u2500 .copier-answers.yml\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 MANIFEST.in\n\u251c\u2500\u2500 NOTICE\n\u251c\u2500\u2500 project_setup.md\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 baklava\n        \u251c\u2500\u2500 __init__.py\n        \u2514\u2500\u2500 my_module.py\n</code></pre> <p>Follow the next steps: Initialize a git repository:</p> <pre><code>cd baklava\ngit init\ngit add --all\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:fdiblen/baklava.git\n</code></pre>"},{"location":"rsecon24/#1450-20-mins-update-the-new-python-package","title":"14:50 (20 mins) - Update the new Python package","text":"<p>Add new features to the created package</p> <pre><code>cd baklava\ncopier update\n</code></pre> <p>Select all the features:</p> <pre><code>Thanks for updating your project using our template.\n\nYou'll be asked a series of questions whose answers are pre-populated\nwith previously entered values. Feel free to change them as needed.\n\nUpdating to template version 0.6.0.post19.dev0+bfb33bd\n\ud83c\udfa4 Select a profile\n   Let me choose (decide each feature yourself)\n\ud83c\udfa4 Enter the name of the Python package\n   baklava\n\ud83c\udfa4 Enter the version of the Python package\n   0.1.0\n\ud83c\udfa4 Enter your full name\n   Faruk D\n\ud83c\udfa4 Select a license (see: https://choosealicense.com)\n   Apache License, Version 2.0\n\ud83c\udfa4 Who is the copyright holder (default: full name)?\n   Faruk D\n\ud83c\udfa4 Short description of package\n   A Sweet package\n\ud83c\udfa4 Add keywords to make your package findable on PyPI (comma-separated)\n   keyword1,keyword 2\n\ud83c\udfa4 Enter the name of your GitHub username or organization\n   fdiblen\n\ud83c\udfa4 What is your email address?\n   faruk@universe.com\n\ud83c\udfa4 Select code quality features\n   done (6 selections)\n\ud83c\udfa4 Select GitHub Action workflows\n   done (2 selections)\n\ud83c\udfa4 Select publish and release features\n   done (3 selections)\n\ud83c\udfa4 Select citation features\n   done (2 selections)\n\ud83c\udfa4 Select documentation features\n   done (4 selections)\n\ud83c\udfa4 Select community features\n   done (2 selections)\n\ud83c\udfa4 What is the email address to report code of conduct violations?\n   faruk@universe.com\nYour project \"baklava\" has been updated successfully!\nIn case there are any conflicts, please resolve them. Then,\nyou're done.\n</code></pre> <p>Add the new files to the git repository:</p> <pre><code>git add --all\ngit commit -m\"added new features\"\n</code></pre>"},{"location":"rsecon24/#1510-10-mins-create-a-new-github-repository","title":"15:10 (10 mins) - Create a new GitHub repository","text":"<p>Go to: https://github.com/new</p> <ul> <li>Repo name: baklava</li> <li>Description: <code>sweet Python package</code></li> <li>Type: Public</li> <li>NO README</li> <li>NO .gitignore</li> <li>NO license</li> </ul>"},{"location":"rsecon24/#1520-15-mins-push-the-package-to-the-new-github-repository","title":"15:20 (15 mins) - Push the package to the new GitHub repository","text":"<p>Push to GitHub:</p> <pre><code>git push --set-upstream origin main\n</code></pre> <ul> <li>Look at the generated <code>next steps</code> issues</li> <li>Look at the GitHub Action workflows</li> </ul>"},{"location":"rsecon24/#1535-10-mins-feedback-session","title":"15:35 (10 mins) -  Feedback session","text":"<p>Short link: https://tinyurl.com/rsecon24pt</p> <p>Long link: https://hackmd.io/@pBkWTvQwSa6d52OQUwKE6g/BktUdXQ20</p> <p>Questions:</p> <ul> <li>What features did you like the most?</li> <li>What features need to be improved?</li> <li>What features would you like to be added?</li> <li>Any other suggestions or notes?</li> </ul>"},{"location":"rsecon24/#tips","title":"Tips","text":""},{"location":"rsecon24/#using-ruff-to-format-your-code","title":"using ruff to format your code","text":"<pre><code>cd baklava/\npython -m venv venv\n. ./venv/bin/activate.fish\npython -m pip install --upgrade pip setuptools\npython -m pip install .[dev,publishing]\nruff format\n</code></pre>"},{"location":"rsecon24/#failing","title":"FAILING","text":"<p>Competing workflows CFF date</p>"},{"location":"tips/","title":"Fish memory","text":"<p>Tips &amp; Tricks to help my fish memory and not to google the same stuff over and over again.</p>"},{"location":"tips/#networking","title":"Networking","text":""},{"location":"tips/#list-active-tcp-ports","title":"List active tcp ports","text":"<pre><code>watch ss -antlp\n</code></pre>"},{"location":"tips/#shell","title":"Shell","text":""},{"location":"tips/#find-and-replace-in-many-files","title":"Find and replace in many files","text":"<pre><code>grep -iR 'search' | xargs sed -i 's/search/replace/g'\n</code></pre>"},{"location":"tips/#gpg","title":"GPG","text":""},{"location":"tips/#list-keys","title":"List keys","text":"<pre><code>gpg --list-secret-keys --keyid-format LONG\n</code></pre>"},{"location":"tips/#export-key","title":"Export key","text":"<pre><code>gpg --armor --export 189ABH19KLDU83\n</code></pre>"},{"location":"tips/#sshfs","title":"SSH(FS)","text":""},{"location":"tips/#mounting-a-remote-system","title":"Mounting a remote system:","text":"<pre><code>sshfs -p 22 -C -o follow_symlinks,auto_cache,reconnect ~/MOUNT_FOLDER USERNAME@SERVERIP:/home/USERNAME\n</code></pre>"},{"location":"tips/#save-ssh-passphrase-in-gnomekeyring","title":"Save ssh passphrase in (gnome)keyring","text":"<p>Install seahorse</p> <pre><code>sudo pacman -S seahorse\n</code></pre> <pre><code>/usr/lib/seahorse/ssh-askpass ~/.ssh/id_rsa\n</code></pre>"},{"location":"tips/#ssh-password-auth","title":"SSH password auth","text":"<pre><code>user=test\nuseradd -m -d /home/$user -s /bin/bash $user\nssh-keygen -b 2048 -t rsa -f ./$user'_sshkey' -q -N \"\"\nmv $user'_sshkey' $user'_sshkey'.private\nmkdir -p /home/$user/.ssh\ncat $user'_sshkey'.pub &gt; /home/$user/.ssh/authorized_keys\nchown -R $user:$user /home/$user/.ssh\nchmod 600 /home/$user/.ssh/authorized_keys\nchmod 700 /home/$user/.ssh\ncat $user'_sshkey'.private\n</code></pre>"},{"location":"tips/#docker","title":"Docker","text":""},{"location":"tips/#run-gui-apps","title":"Run GUI apps","text":"<pre><code>xhost +si:localuser:root\n</code></pre> <pre><code>docker run --rm -it --net=host \\\n    --privileged \\\n    -e DISPLAY \\\n    --device /dev/dri \\\n    --device /dev/snd \\\n    --device /dev/video0 \\\n    --device /dev/input \\\n    -v /tmp/.X11-unix:/tmp/.X11-unix \\\n    -v /etc/localtime:/etc/localtime:ro \\\n    -v $(pwd):/app \\\n    ubuntu /bin/bash\n</code></pre>"},{"location":"tips/#linux-iso-bootable-usb-drive","title":"Linux iso --&gt; bootable USB drive","text":"<pre><code>dd bs=4M if=path/to/distro.iso of=/dev/sdX status=progress oflag=sync\n</code></pre>"},{"location":"tips/#gpus","title":"GPUs","text":""},{"location":"tips/#nvidia-devices","title":"NVIDIA devices","text":"<pre><code>docker run --rm -ti --runtime=nvidia nvidia/cuda nvidia-smi\n</code></pre>"},{"location":"tips/#pytorch","title":"PyTorch","text":"<pre><code>docker run -it --rm --runtime=nvidia --shm-size=1g -e NVIDIA_VISIBLE_DEVICES=0,1 nvcr.io/nvidia/pytorch\n</code></pre>"},{"location":"tips/#tensorflow","title":"Tensorflow","text":"<pre><code>docker run \\\n    --runtime=nvidia \\\n    --rm \\\n    -ti \\\n    -v \"${PWD}:/app\" \\\n    gcr.io/tensorflow/tensorflow:latest-gpu \\\n    python /app/benchmark.py cpu 10000\n</code></pre>"},{"location":"tips/#opengl","title":"OpenGL","text":"<pre><code>xhost +si:localuser:root\ndocker run --runtime=nvidia -ti --rm -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix nvcr.io/nvidia/pytorch\n</code></pre>"},{"location":"tips/#deployment","title":"Deployment","text":""},{"location":"tips/#heroku","title":"Heroku","text":"<pre><code>docker build --network=host -t spot .\n</code></pre>"},{"location":"tips/#new-image","title":"New image","text":"<pre><code>npm install -g heroku\nheroku login\nheroku container:login\nheroku create\nheroku container:push spot\nheroku container:release spot\nheroku open\n</code></pre>"},{"location":"tips/#exisiting-image","title":"Exisiting image","text":""},{"location":"tips/#docker-tag-registryherokucom","title":"docker tag  registry.heroku.com// <p>docker tag nlesc/spot registry.heroku.com/nlesc-spot/dev</p>","text":""},{"location":"tips/#docker-push-registryherokucom","title":"docker push registry.heroku.com// <p>docker push registry.heroku.com/nlesc-spot/dev</p>","text":""},{"location":"tips/#python","title":"Python","text":""},{"location":"tips/#http-server","title":"Http server","text":"<pre><code>python3 -m http.server --directory ./ 8080\n</code></pre>"},{"location":"tips/#pyenv-installation-archlinux","title":"Pyenv installation (Archlinux)","text":"<pre><code>yay -S pyenv\npyenv install --list\npyenv install 3.7.2\npyenv global 3.7.2\npip install --upgrade pip\n</code></pre>"},{"location":"tips/#virtual-environment","title":"Virtual environment","text":""},{"location":"tips/#venv","title":"venv","text":"<pre><code>python3 -m venv .venv\n. .venv/bin/activate.fish # fish shell\n. .venv/bin/activate # bash\npip install --upgrade pip\n</code></pre>"},{"location":"tips/#pipenv","title":"pipenv","text":"<p><pre><code>pip install -U pipenv\ncd my_project\npipenv install\n</code></pre> Quick tutorial</p>"},{"location":"tips/#use-virtualenvironment-in-visual-studio-code","title":"Use virtualenvironment in Visual studio code","text":"<p>https://code.visualstudio.com/docs/python/environments</p>"},{"location":"tips/#clear-variable-on-ipythonjupyter","title":"Clear variable on IPython/Jupyter","text":"<pre><code>%reset\n%reset_selective variable_name\n</code></pre>"},{"location":"tips/#upgrade-outdated-python-packages","title":"Upgrade outdated Python packages","text":"<pre><code>pip install $(pip list --outdated | awk 'NR&gt;2 { print $1 }') --upgrade\n</code></pre>"},{"location":"tips/#anaconda","title":"Anaconda","text":""},{"location":"tips/#create-an-environment","title":"Create an environment","text":"<pre><code>conda create -n nso python=3.7 pandas\n</code></pre>"},{"location":"tips/#export-environment","title":"Export environment","text":"<pre><code>conda env export -c conda-forge -n nso --override-channels | grep -v \"^prefix: \"  &gt; environment.yml\n</code></pre>"},{"location":"tips/#list-environments","title":"List environments","text":"<pre><code>conda env list\n</code></pre>"},{"location":"tips/#create-an-environment-from-a-file","title":"Create an environment from a file","text":"<pre><code>conda env create -f environment.yml\n</code></pre>"},{"location":"tips/#deactivate-an-environment","title":"Deactivate an environment","text":"<pre><code>conda deactivate\n</code></pre>"},{"location":"tips/#remove-the-environment","title":"Remove the environment","text":"<pre><code>conda env remove -n nso\n</code></pre>"},{"location":"tips/#nodejs","title":"Nodejs","text":""},{"location":"tips/#update-outdated-packages","title":"Update outdated packages","text":"<pre><code>npm i -g npm-check-updates &amp;&amp; ncu -u &amp;&amp; npm i\n</code></pre>"},{"location":"tips/#gnome","title":"GNOME","text":""},{"location":"tips/#set-nautilus-as-default-file-manager","title":"Set Nautilus as default file manager","text":"<pre><code>xdg-mime default org.gnome.Nautilus.desktop inode/directory\n</code></pre>"},{"location":"tips/#add-desktop-bookmark-to-nautilus-files","title":"add Desktop bookmark to nautilus (files)","text":"<pre><code>gsettings set org.gnome.desktop.background show-desktop-icons true\ngsettings set org.gnome.desktop.background draw-background true\n</code></pre>"},{"location":"tips/#xterm","title":"Xterm","text":"<p>Start xterm with a proper font.</p> <pre><code>xterm -fa 'Monospace' -fs 15\n</code></pre>"},{"location":"tips/#ufw","title":"UFW","text":"<pre><code>sudo ufw enable\nsudo ufw default deny\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\nsudo ufw allow 22\nsudo ufw logging on\nsudo ufw status\n</code></pre>"},{"location":"tips/#systemd","title":"Systemd","text":""},{"location":"tips/#list-targets","title":"list targets","text":"<pre><code>systemctl list-units -t target --all\n</code></pre>"},{"location":"tips/#get-default-target","title":"get default target","text":"<pre><code>systemctl get-default\n</code></pre>"},{"location":"tips/#see-what-target-needs","title":"see what target needs","text":"<pre><code>systemctl show -p \"Wants\" graphical.target\n</code></pre>"},{"location":"tips/#show-enabled-services","title":"show enabled services","text":"<pre><code>systemctl list-unit-files --state enabled\n</code></pre>"},{"location":"tips/#show-failed-services","title":"show failed services","text":"<pre><code>systemctl list-units --failed\n</code></pre>"},{"location":"tips/#show-logs-of-a-service","title":"show logs of a service","text":"<pre><code>journalctl -u optimus-manager.service\n</code></pre>"}]}